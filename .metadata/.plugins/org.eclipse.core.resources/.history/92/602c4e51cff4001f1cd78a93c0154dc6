package com.FirstProject.ServiceImpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.FirstProject.Entity.Student;
import com.FirstProject.Repositories.StudentRepo;
import com.FirstProject.Service.StudentService;

@Component
public class StudentServiceImpl implements StudentService {

	@Autowired
	StudentRepo studentRepo;

	@Override
	public List<Student> getAllStudents() {

		return studentRepo.findAll();
	}

	@Override
	public Student getStudentById(int studentId) {

		List<Student> list = studentRepo.findAll();

		for (Student std : list) {
			if (std.getStudentId() == studentId)
				return std;
		}

		return null;

	}

	public Student addStudent(Student student) {

		Student std = null;
		try {
			studentRepo.save(student);
			return studentRepo.getReferenceById(student.getStudentId());
		}

		catch (Exception e) {
			return std;
		}

	}
	

	public String updateStudent(int id, Student student) {

		Student oldStudent = null;
		List<Student> list = studentRepo.findAll();

		for (Student std : list) {
			if (std.getStudentId() == id)
				oldStudent = std;

		}

		if(oldStudent==(null))	
			return null;
		
		try {
			oldStudent.setStudentLevel(student.getStudentLevel());
		oldStudent.setStudentName(student.getStudentName());

		studentRepo.save(oldStudent);

		return oldStudent.getStudentName() + " updated";
		}
		catch (Exception e) {
			return null;
		}
	}
	
	

	public String deleteAllStudents() {
		studentRepo.deleteAll();
		return "All students removed";
	}

	public String deleteStudent(int studentId) {
		List<Student> list = studentRepo.findAll();

		String name = null;
		for (Student std : list) {
			if (std.getStudentId() == studentId) {
				name = std.getStudentName();
				studentRepo.delete(std);
			}

		}

		return name + " is no more";
	}

	public boolean validationCheck(Student student) {

		if (student.getStudentLevel() == 0 || student.getStudentName() == null)
			return false;
		else
			return true;
	}

}
